Décision d'implémentation: Abonnement du code de mise à jour des barres de défilement à des événements de perspective.

Cette décisions fait partit du « refactoring » de code que nous effectué. Nous avons choisi d'implanter des barres de défilement pour effectuer les translations lorsque la taille de l'image dépasse la taille de son conteneur. Il fallait alors synchroniser le maximum des valeurs des barres de défilement avec le maximum possible de déplacement pour afficher certaines parties de l'image. 

La première solution que nous avons mise au jour était de créer une méthode qui effectue la mise à jour du maximum des barre de défilement et celle-ci était appelée à de nombreux endroits dans une classe du client où on jugeait bon de mettre à jour ces barres de défilement. Insatisfait de l'ingénierie de cette partie du code, nous avons procédé à l'amélioration de ce procédé. Celle-ci consista en abonnant le code de mise à jour des barres de défilement aux changements de la perspective. C'est donc les classes définissant le patron observateur qui s'occupait d'appeler le code de mis à jour au bon moment. En terme de couplage, cela est très bon puisque le client délègue la responsabilité de savoir quand mettre à jour les barres de défilement. Le client est ainsi découplé du processus de mise à jour. Il est quand même à noter que le code de mise à jour se trouve encore dans une classe du client mais c'est l'exécution de celui-ci qui est délèguer. Une amélioration possible de ce procédé déjà améliorer aurait été d'encapsuler ce code ailleurs pour ne pas que cette partie du client aie accès à son implémentation.
